<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="22" passed="20" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
    <line>
      <![CDATA[checking reporter]]>
    </line>
    <line>
      <![CDATA[Checking reporter]]>
    </line>
  </reporter-output>
  <suite started-at="2023-01-28T22:47:32 IST" name="Suite" finished-at="2023-01-28T22:47:32 IST" duration-ms="141">
    <groups>
    </groups>
    <test started-at="2023-01-28T22:47:32 IST" name="Test" finished-at="2023-01-28T22:47:32 IST" duration-ms="141">
      <class name="testngcheck.CheckingTestSequence">
        <test-method signature="ab()[pri:0, instance:testngcheck.CheckingTestSequence@47d9a273]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ba()[pri:0, instance:testngcheck.CheckingTestSequence@47d9a273]" started-at="2023-01-28T22:47:32 IST" name="ba" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ba -->
      </class> <!-- testngcheck.CheckingTestSequence -->
      <class name="testngcheck.CheckingTestSequenceWithPriority">
        <test-method signature="ba()[pri:1, instance:testngcheck.CheckingTestSequenceWithPriority@48f278eb]" started-at="2023-01-28T22:47:32 IST" name="ba" finished-at="2023-01-28T22:47:32 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ba -->
        <test-method signature="ab()[pri:2, instance:testngcheck.CheckingTestSequenceWithPriority@48f278eb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ab -->
      </class> <!-- testngcheck.CheckingTestSequenceWithPriority -->
      <class name="testngcheck.ReporterClass">
        <test-method signature="ab()[pri:-1, instance:testngcheck.ReporterClass@4b8ee4de]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ba()[pri:1, instance:testngcheck.ReporterClass@4b8ee4de]" started-at="2023-01-28T22:47:32 IST" name="ba" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ba -->
      </class> <!-- testngcheck.ReporterClass -->
      <class name="testngcheck.InvocationKeyword">
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="5" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="3" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="4" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="3" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
        <test-method signature="ab()[pri:1, instance:testngcheck.InvocationKeyword@2ed2d9cb]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
      </class> <!-- testngcheck.InvocationKeyword -->
      <class name="testngcheck.AlwaysRunKeyword">
        <test-method signature="ba()[pri:-2, instance:testngcheck.AlwaysRunKeyword@6392827e]" started-at="2023-01-28T22:47:32 IST" name="ba" finished-at="2023-01-28T22:47:32 IST" duration-ms="5" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at testngcheck.AlwaysRunKeyword.ba(AlwaysRunKeyword.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ba -->
        <test-method signature="ab()[pri:-1, instance:testngcheck.AlwaysRunKeyword@6392827e]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" depends-on-methods="testngcheck.AlwaysRunKeyword.ba" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
      </class> <!-- testngcheck.AlwaysRunKeyword -->
      <class name="testngcheck.Annotations">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="beforeSuite" finished-at="2023-01-28T22:47:32 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="beforeTest" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeCalass()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="beforeCalass" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeCalass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="beforeMethod" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="test1" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="afterMethod" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="test2()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="test2" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="beforeMethod" finished-at="2023-01-28T22:47:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="afterMethod" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="afterClass" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="afterTest" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testngcheck.Annotations@4310d43]" started-at="2023-01-28T22:47:32 IST" name="afterSuite" finished-at="2023-01-28T22:47:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testngcheck.Annotations -->
      <class name="testngcheck.EnabledKeyword">
        <test-method signature="ab()[pri:-1, instance:testngcheck.EnabledKeyword@27f981c6]" started-at="2023-01-28T22:47:32 IST" name="ab" finished-at="2023-01-28T22:47:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Checking reporter]]>
            </line>
          </reporter-output>
        </test-method> <!-- ab -->
      </class> <!-- testngcheck.EnabledKeyword -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
